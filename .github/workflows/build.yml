name: Build Claudia

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-22.04, macos-latest, windows-latest]
        
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install system dependencies (Ubuntu)
      if: matrix.platform == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libwebkit2gtk-4.1-dev \
          libgtk-3-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          patchelf \
          build-essential \
          curl \
          wget \
          file \
          libssl-dev \
          libxdo-dev \
          libsoup-3.0-dev \
          libjavascriptcoregtk-4.1-dev

    - name: Install system dependencies (macOS)
      if: matrix.platform == 'macos-latest'
      run: |
        # Install Xcode Command Line Tools if not present
        xcode-select --install || true

    - name: Install system dependencies (Windows)
      if: matrix.platform == 'windows-latest'
      run: |
        # Dependencies should be available on GitHub Actions Windows runners
        echo "Windows dependencies should be pre-installed"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
          node_modules/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-bun-${{ hashFiles('**/bun.lockb') }}

    - name: Install frontend dependencies
      run: bun install

    - name: Build application
      run: bun run tauri build

    - name: List build artifacts (Debug)
      run: |
        echo "Build artifacts:"
        find src-tauri/target/release/bundle -type f -name "*" || true
        ls -la src-tauri/target/release/ || true

    - name: Upload artifacts (Linux)
      if: matrix.platform == 'ubuntu-22.04'
      uses: actions/upload-artifact@v3
      with:
        name: claudia-linux
        path: |
          src-tauri/target/release/bundle/appimage/*.AppImage
          src-tauri/target/release/bundle/deb/*.deb
          src-tauri/target/release/claudia
        if-no-files-found: warn

    - name: Upload artifacts (macOS)
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: claudia-macos
        path: |
          src-tauri/target/release/bundle/dmg/*.dmg
          src-tauri/target/release/bundle/macos/*.app
          src-tauri/target/release/claudia
        if-no-files-found: warn

    - name: Upload artifacts (Windows)
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: claudia-windows
        path: |
          src-tauri/target/release/bundle/msi/*.msi
          src-tauri/target/release/bundle/nsis/*.exe
          src-tauri/target/release/claudia.exe
        if-no-files-found: warn
